<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hugo on yingchao Blog</title>
    <link>https://yingchaotw.github.io/tags/hugo/</link>
    <description>Recent content in Hugo on yingchao Blog</description>
    <image>
      <title>yingchao Blog</title>
      <url>https://yingchaotw.github.io/papermod-cover.png</url>
      <link>https://yingchaotw.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.130.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Feb 2024 16:46:18 +0800</lastBuildDate>
    <atom:link href="https://yingchaotw.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 Docker Container 上撰寫 Hugo Blog</title>
      <link>https://yingchaotw.github.io/posts/make-hugo-blog-at-docker/</link>
      <pubDate>Thu, 15 Feb 2024 16:46:18 +0800</pubDate>
      <guid>https://yingchaotw.github.io/posts/make-hugo-blog-at-docker/</guid>
      <description>TL;DR Hugo 介紹: Hugo 是一個開源的靜態網站產生器，擁有極快的網站架設速度，適合用於建立網站的框架。 Docker 設定與建置: 提供了詳細的 Dockerfile 以及如何使用它來建構 Hugo 的 Docker image，並且說明如何啟動、停止和刪除容器。 Hugo 的基本用法: 包括 Hugo 的安裝測試、命令查看、建立網站、處理草稿和過期內容、以及開發和測試網站的方法。 部署網站: 提到如何在準備部署網站時，透過 Hugo 建立網站，並且說明了在簡單的託管環境中如何上傳文件，以及使用 CI/CD 工作流程進行網站部署的常見做法。 附加功能: 也介紹如何使用 LiveReload 進行即時重新載入和自動重定向，以提升開發體驗。 Docker Setup 首先建立 dockerfile, 能夠建立 image, 使用這個 image 建立 container.
FROM golang:alpine as builder ENV GOGC=50 # gcc/g++ are required to build SASS libraries for extended version RUN apk update &amp;amp;&amp;amp; \ # [自選] 編譯 Image 時間較短 apk add --no-cache --repository=https://dl-cdn.</description>
    </item>
  </channel>
</rss>
